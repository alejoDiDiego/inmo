import Head from 'next/head'
import { useRouter } from 'next/router'
import { useContext, useEffect, useState } from 'react'
import ContainerRegisterEmpresa1 from '../../components/Register/Register-Empresa/ContainerRegisterEmpresa1.js'
import ContainerRegisterEmpresa2 from '../../components/Register/Register-Empresa/ContainerRegisterEmpresa2.js'
import ContainerRegisterEmpresa3 from '../../components/Register/Register-Empresa/ContainerRegisterEmpresa3.js'
import styles from '../../styles/RegisterEmpresa.module.css'
import firebase, { FirebaseContext } from '../../firebase'
import ContainerSpinner from '../../components/Register/ContainerSpinner'
import Layout from '../../components/layout/Layout'


export default function RegisterEmpresa() {

  const [verdadero, setVerdadero] = useState(false)
  const [verdadero2, setVerdadero2] = useState(false)

  const [omitir, setOmitir] = useState(false)

  const [loadingBig, setLoadingBig] = useState(true)


  const [userCore, setUserCore] = useState({})

  const router = useRouter()

  const { usuario } = useContext(FirebaseContext)






  useEffect(() => {
    // if (usuario != null) {
    //   console.log(usuario)
    //   if (Object.keys(usuario.usuario).length > 0) {
    //     console.log("el usuario ya existe")
    //     router.push('/')
    //     return
    //   }
    //   setLoadingBig(false)
    //   console.log('no')
    // }


    if (usuario != null) {
      console.log(usuario)
      if (Object.keys(usuario.usuario).length > 0) {
        console.log("el usuario esta loggeado")
        router.push('/')
        return
      }
      setLoadingBig(false)
      console.log('no')
      return
    }

    check()




  }, [usuario])




  return (
    <div className={styles.body_before}>
      <div className={styles.body}>
        <Head>
          <title>Inmo</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/Logo_inmo_new.png" />
        </Head>
        <Layout registro={true}>
          {
            loadingBig == true ?
              <ContainerSpinner />
              :
              verdadero == false ?
                <ContainerRegisterEmpresa1
                  setVerdadero={setVerdadero}
                  userCore={userCore}
                  setUserCore={setUserCore} />
                :
                (
                  verdadero2 == false ? <ContainerRegisterEmpresa2 setVerdadero={setVerdadero}
                    setVerdadero2={setVerdadero2}
                    userCore={userCore}
                    setUserCore={setUserCore}
                    omitir={omitir}
                    setOmitir={setOmitir} />
                    :
                    <ContainerRegisterEmpresa3
                      setVerdadero={setVerdadero}
                      setVerdadero2={setVerdadero2}
                      userCore={userCore}
                      setUserCore={setUserCore}
                      omitir={omitir}
                      setOmitir={setOmitir} />
                )
          }
        </Layout>

      </div>
    </div>
  )
}



